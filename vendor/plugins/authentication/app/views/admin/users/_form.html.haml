- form_for [:admin, @user] do |f|
  = f.error_messages
  .field
    = f.label :login
    = f.text_field :login
  .field
    = f.label :email
    = f.text_field :email
  .field
    = f.label :password
    = f.password_field :password, :autocomplete => 'off'
    = "<br /><span class='preview'>#{t('.blank_password_keeps_current')}</span>" unless @user.new_record?
  .field
    = f.label :password_confirmation
    = f.password_field :password_confirmation, :autocomplete => 'off'
  .field.plugin_access
    %span.label_with_help
      = f.label :plugin_access, nil, :class => "title_label"
      = link_to "(#{t('.enable_all')})", "", :id => "user_plugins_enable_all"
    %ul#plugins
      - @available_plugins.each do |plugin|
        - if Refinery::Plugins.always_allowed.names.include?(plugin[:name]) or (plugin[:name] == 'refinery_users' and @user.id == current_user.id)
          = hidden_field_tag 'user[plugins][]', plugin[:name]
        - else
          %li
            = check_box_tag 'user[plugins][]',
              plugin[:name],
              @selected_plugin_names.include?(plugin[:name]),
              :id => "plugins_#{plugin[:name]}"

            = f.label 'user[plugins][]',
              t("plugins.#{plugin[:name].downcase}.title", :default => plugin[:title]),
              :class => "stripped",
              :for => "plugins_#{plugin[:name]}"
  = render :partial => "/shared/admin/form_actions",
    :locals => { :f => f,
      :continue_editing => false,
      :hide_delete => !current_user.can_delete?(@user),
      :delete_title => t('admin.users.user.confirm_delete_title'),
      :delete_confirmation => t('admin.users.user.confirm_delete_message', :who => @user.login) }
- content_for :head do
  :javascript
    $(document).ready(function() {
      $('#user_plugins_enable_all').click(function(e, a) {
        $('div.field.plugin_access ul#plugins li input:checkbox').attr('checked', true);
        e.preventDefault();
      });
    });
  
